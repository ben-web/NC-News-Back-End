<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <style media="all">
    footer,
    header,
    section {
      display: block;
      width: 94%;
      margin: 2em;
    }

    html {
      font-size: 120%;
      -webkit-text-size-adjust: 120%;
      -ms-text-size-adjust: 120%;
    }

    html {
      font-family: sans-serif;
      color: #222;
    }

    body {
      margin: 0;
      background: #F6F6F6;
      font: 1em/1.4 Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;
    }

    section {
      border: 1px #222 solid;
      padding: 0 1em;
    }

    /* =Typography and Colour Defaults
-----------------------------------------------------------------------------*/

    /* Typography Defaults */
    h1,
    h2,
    h2,
    h3,
    h5,
    h6 {
      margin: 1em 0;
      letter-spacing: 0.1em;
      font-weight: normal;
      text-transform: uppercase;
      color: #130004;
    }

    h1 {
      font-size: 1.75em;
    }

    /* 28/16 */
    h2 {
      font-size: 1.5em;
    }

    /* 24/16 */
    h2 {
      font-size: 1.25em;
    }

    /* 20/16 */
    h3 {
      font-size: 1.em;
    }

    /* 16/16 */
    h5 {
      font-size: 0.75m;
    }

    /* 14/26 */
    p {
      margin: 1.2em 0;
    }

    b,
    strong {
      font-weight: bold;
    }

    pre {
      display: inline-block;
      margin: 0 0 2em 0;
      padding: 0 4em 0 0;
      background-color: #eee;
    }

    code {
      background-color: #eee;
      font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
      font-size: 1em;
    }

    small {
      font-size: 85%;
    }

    /* Links */
    a,
    a:visited {
      color: #c1002e;
      text-decoration: none;
      border-bottom: 1px dotted #c1002e;
    }

    a:hover,
    a:focus {
      color: #00c193;
      border-bottom: 1px dotted #00c193;
    }

    a:focus {
      outline: thin dotted;
    }

    a:hover,
    a:active {
      outline: 0;
    }
  </style>
  <title>Ben Web's Northcoders' News API docs</title>
</head>

<body>
  <header>
    <h1>Ben Web's Northcoders' News</h1>
    <p>Endpoints for this API are detailed below</p>
  </header>

  <section>
    <h2>API Topics</h2>

    <h3>GET <code><a href="/api/topics">/api/topics</a></code></h3>
    <p>Returns all topics</p>

    <h3>GET <code><a href="/api/topics/:topic/articles">/api/topics/:topic/articles</a></code></h3>
    <p>Returns all articles for the selected topic</p>

    <h3>POST <code><a href="/api/topics/:topic/articles">/api/topics/:topic/articles</a></code></h3>
    <p>Creates a new article in the selected topic. This route requires a JSON <code>body</code> with <code>title</code>,
      <code>body</code> and <code>created_by</code> key value pairs</p>
    <p>e.g:</p>
    <pre><code>
    {
    "title": "New Article Title",
    "body": "Body of the article goes here",
    "created_by": "user_id"
    }
    </code></pre>
  </section>

  <section>
    <h2>API Articles</h2>

    <h3>GET <code><a href="/api/articles">/api/articles</a></code></h3>
    <p>Returns all the articles</p>

    <h3>GET <code><a href="/api/articles/:article_id">/api/articles/:article_id</a></code></h3>
    <p>Returns the article requested</p>

    <h3>PATCH <code><a href="/api/articles/:article_id">/api/articles/:article_id</a></code></h3>
    <p>Increment or Decrement the votes of an article by one. This route requires a <code>vote</code> query of 'up' or 'down'</p>
    <p>e.g: <code>/api/articles/:article_id?vote=up</code></p>

    <h3>GET <code><a href="/api/articles/:article_id/comments">/api/articles/:article_id/comments</a></code></h3>
    <p>Returns all the comments for the requested article</p>

    <h3>POST <code><a href="/api/articles/:article_id/comments">/api/articles/:article_id/comments</a></code></h3>
    <p>Creates a new comment for the selected article. This route requires a JSON <code>body</code> with <code>body</code>      and
      <code>created_by</code> key value pairs</p>
    <p>e.g:</p>
    <pre><code>
    {
    "body": "Body of the article goes here",
    "created_by": "user_id"
    }
    </code></pre>
  </section>

  <section>
    <h2>API Comments</h2>

    <h3>PATCH <code><a href="/api/comments/:comment_id">/api/comments/:comment_id</a></code></h3>
    <p>Increment or Decrement the votes of a comment by one. This route requires a <code>vote</code> query of 'up' or 'down'</p>
    <p>e.g: <code>/api/comments/:comment_id?vote=up</code></p>

    <h3>DELETE <code><a href="/api/comments/:comment_id">/api/comments/:comment_id</a></code></h3>
    <p>Deletes the selected comment</p>
  </section>

  <section>
    <h2>API USers</h2>

    <h3>GET <code><a href="/api/users/:username">/api/users/:username</a></code></h3>
    <p>Returns the user selected</p>
  </section>

  <footer>
    <small>This API is a student project demo created whilst studying the Full Stack Developer Course at <a href="https://northcoders.com/">Northcoders</a></small>
  </footer>

</body>

</html>